matrix = [
  ("r18b", {"arm": ["16", "21", "24", "26", "27", "28",], }),
  ("r17c", {"arm": ["16", "21", "24", "26", "27", "28",], }),
  ("r16b", {"arm": ["16", "21", "24",                  ], }),
  ("r12b", {"arm": ["16", "21", "24",                  ], }),
]

import sys

def comment(*args, **kw):
  sep = kw['sep'] if 'sep' in kw else ' '
  line = sep.join(args)
  print(comment_format.format(line), **kw)

if len(sys.argv) != 2:
  sys.exit("Invalid Arguments")
kind = sys.argv[1]

travis_template = '''    - name: "{name}"
      env:
        - arch={arch}
        - ndk={rev}
        - api={api}'''

shell_template = '''echo {rev}-{arch}-{api}
ndk={rev} arch={arch} api={api} bash single.sh &> {name}.log || (echo FAIL; bash rm_toolchain.sh; exit 0)'''

if kind == "travis":
  comment_format = "# {}"
  template = travis_template
elif kind == "shell":
  comment_format = "# {}"
  template = shell_template
else:
  sys.exit("Invalid Argument")

comment('The following is generated by matrix.py')
if kind == "shell":
  print('bash get-ACE-TAO.sh')
  print('bash get-OpenDDS.sh')
for rev, abis in matrix:
  comment(rev, '========================================')
  if kind == "shell":
    print('ndk={} bash get-NDK.sh'.format(rev))
  for arch, apis in abis.items():
    for api in apis:
      name = '{}-{}-{}'.format(rev, arch, api)
      print(template.format(name=name, arch=arch, rev=rev, api=api))
  if kind == "shell":
    print('ndk={} bash rm_NDK.sh'.format(rev))
    

